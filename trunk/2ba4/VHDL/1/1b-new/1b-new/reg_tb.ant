-- F:\COLLEGE\2BA4\VHDL\1\1B-NEW\1B-NEW\REG_TB.ANT
-- VHDL Annotation Test Bench created by
-- HDL Bencher 4.1i
-- Wed Apr 14 21:27:22 2004

LIBRARY  IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

LIBRARY ieee;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY testbench IS
END testbench;

ARCHITECTURE testbench_arch OF testbench IS
-- If you get a compiler error on the following line,
-- from the menu do Options->Configuration select VHDL 87
FILE RESULTS: TEXT OPEN WRITE_MODE IS "f:\college\2ba4\vhdl\1\1b-new\1b-new\reg_tb.ano";
	COMPONENT reg
		PORT (
			CLK : in  STD_LOGIC;
			DIN : in  STD_LOGIC;
			LOAD : in  STD_LOGIC;
			LOAD_DATA : in  STD_LOGIC_VECTOR (3 DOWNTO 0);
			DOUT : out  STD_LOGIC_VECTOR (3 DOWNTO 0)
		);
	END COMPONENT;

	SIGNAL CLK : STD_LOGIC;
	SIGNAL DIN : STD_LOGIC;
	SIGNAL LOAD : STD_LOGIC;
	SIGNAL LOAD_DATA : STD_LOGIC_VECTOR (3 DOWNTO 0);
	SIGNAL DOUT : STD_LOGIC_VECTOR (3 DOWNTO 0);

BEGIN
	UUT : reg
	PORT MAP (
		CLK => CLK,
		DIN => DIN,
		LOAD => LOAD,
		LOAD_DATA => LOAD_DATA,
		DOUT => DOUT
	);

	PROCESS -- clock process
		VARIABLE TX_TIME : INTEGER :=0;

		PROCEDURE ANNOTATE_DOUT(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",DOUT,"));
			write(TX_LOC, DOUT);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

	BEGIN
		CLOCK_LOOP : LOOP
		CLK <= transport '0';
		WAIT FOR 10 ns;
		TX_TIME := TX_TIME + 10;
		CLK <= transport '1';
		WAIT FOR 10 ns;
		TX_TIME := TX_TIME + 10;
		ANNOTATE_DOUT(TX_TIME);
		WAIT FOR 40 ns;
		TX_TIME := TX_TIME + 40;
		CLK <= transport '0';
		WAIT FOR 40 ns;
		TX_TIME := TX_TIME + 40;
		END LOOP CLOCK_LOOP;
	END PROCESS;

	PROCESS
		VARIABLE TX_OUT : LINE;

		BEGIN
		-- --------------------
		DIN <= transport '0';
		LOAD <= transport '1';
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0000"); --0
		-- --------------------
		WAIT FOR 100 ns; -- Time=100 ns
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0001"); --1
		-- --------------------
		WAIT FOR 100 ns; -- Time=200 ns
		LOAD <= transport '1';
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0010"); --2
		-- --------------------
		WAIT FOR 100 ns; -- Time=300 ns
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0011"); --3
		-- --------------------
		WAIT FOR 100 ns; -- Time=400 ns
		DIN <= transport '1';
		LOAD <= transport '0';
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0100"); --4
		-- --------------------
		WAIT FOR 100 ns; -- Time=500 ns
		DIN <= transport '0';
		LOAD <= transport '0';
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0101"); --5
		-- --------------------
		WAIT FOR 100 ns; -- Time=600 ns
		DIN <= transport '1';
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0110"); --6
		-- --------------------
		WAIT FOR 100 ns; -- Time=700 ns
		DIN <= transport '0';
		LOAD <= transport '0';
		LOAD_DATA <= transport STD_LOGIC_VECTOR'("0111"); --7
		-- --------------------
		WAIT FOR 60 ns; -- Time=760 ns
		-- --------------------

		write(TX_OUT, string'("Total[]"));
		writeline(results, TX_OUT);
		ASSERT (FALSE) REPORT
			"Success! Simulation for annotation completed"
			SEVERITY FAILURE;
	END PROCESS;
END testbench_arch;

CONFIGURATION reg_cfg OF testbench IS
	FOR testbench_arch
	END FOR;
END reg_cfg;
