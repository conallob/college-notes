-- F:\COLLEGE\2BA4\VHDL\1\1B-NEW\1B-NEW\SPLITTER_TB.ANT
-- VHDL Annotation Test Bench created by
-- HDL Bencher 4.1i
-- Thu Apr 15 12:09:47 2004

LIBRARY  IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

LIBRARY ieee;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY testbench IS
END testbench;

ARCHITECTURE testbench_arch OF testbench IS
-- If you get a compiler error on the following line,
-- from the menu do Options->Configuration select VHDL 87
FILE RESULTS: TEXT OPEN WRITE_MODE IS "f:\college\2ba4\vhdl\1\1b-new\1b-new\splitter_tb.ano";
	COMPONENT splitter
		PORT (
			input : in  std_logic_vector (7 DOWNTO 0);
			output0 : out  std_logic;
			output2 : out  std_logic;
			output1 : out  std_logic;
			output3 : out  std_logic;
			output4 : out  std_logic;
			output5 : out  std_logic;
			output6 : out  std_logic;
			output7 : out  std_logic
		);
	END COMPONENT;

	SIGNAL input : std_logic_vector (7 DOWNTO 0);
	SIGNAL output0 : std_logic;
	SIGNAL output2 : std_logic;
	SIGNAL output1 : std_logic;
	SIGNAL output3 : std_logic;
	SIGNAL output4 : std_logic;
	SIGNAL output5 : std_logic;
	SIGNAL output6 : std_logic;
	SIGNAL output7 : std_logic;

BEGIN
	UUT : splitter
	PORT MAP (
		input => input,
		output0 => output0,
		output2 => output2,
		output1 => output1,
		output3 => output3,
		output4 => output4,
		output5 => output5,
		output6 => output6,
		output7 => output7
	);

	PROCESS -- Annotate outputs process
		VARIABLE TX_TIME : INTEGER :=0;

		PROCEDURE ANNOTATE_output0(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output0,"));
			write(TX_LOC, output0);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output2(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output2,"));
			write(TX_LOC, output2);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output1(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output1,"));
			write(TX_LOC, output1);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output3(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output3,"));
			write(TX_LOC, output3);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output4(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output4,"));
			write(TX_LOC, output4);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output5(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output5,"));
			write(TX_LOC, output5);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output6(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output6,"));
			write(TX_LOC, output6);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

		PROCEDURE ANNOTATE_output7(
			TX_TIME : INTEGER
		) IS
			VARIABLE TX_STR : String(1 to 4096);
			VARIABLE TX_LOC : LINE;
		BEGIN
			write(TX_LOC,string'("Annotate["));
			write(TX_LOC, TX_TIME);
			write(TX_LOC,string'(",output7,"));
			write(TX_LOC, output7);
			write(TX_LOC, string'("]"));
			TX_STR(TX_LOC.all'range) := TX_LOC.all;
			writeline(results, TX_LOC);
			Deallocate(TX_LOC);
		END;

	BEGIN
		CHECK_LOOP : LOOP
		WAIT FOR 50 ns;
		TX_TIME := TX_TIME + 50;
		ANNOTATE_output0(TX_TIME);
		ANNOTATE_output2(TX_TIME);
		ANNOTATE_output1(TX_TIME);
		ANNOTATE_output3(TX_TIME);
		ANNOTATE_output4(TX_TIME);
		ANNOTATE_output5(TX_TIME);
		ANNOTATE_output6(TX_TIME);
		ANNOTATE_output7(TX_TIME);
		WAIT FOR 50 ns;
		TX_TIME := TX_TIME + 50;
		END LOOP CHECK_LOOP;
	END PROCESS;

	PROCESS
		VARIABLE TX_OUT : LINE;

		BEGIN
		-- --------------------
		input <= transport std_logic_vector'("00000000"); --0
		-- --------------------
		WAIT FOR 100 ns; -- Time=100 ns
		input <= transport std_logic_vector'("00000010"); --2
		-- --------------------
		WAIT FOR 100 ns; -- Time=200 ns
		input <= transport std_logic_vector'("00000100"); --4
		-- --------------------
		WAIT FOR 100 ns; -- Time=300 ns
		input <= transport std_logic_vector'("00001000"); --8
		-- --------------------
		WAIT FOR 100 ns; -- Time=400 ns
		input <= transport std_logic_vector'("00010000"); --10
		-- --------------------
		WAIT FOR 100 ns; -- Time=500 ns
		input <= transport std_logic_vector'("00100000"); --20
		-- --------------------
		WAIT FOR 100 ns; -- Time=600 ns
		input <= transport std_logic_vector'("01000000"); --40
		-- --------------------
		WAIT FOR 100 ns; -- Time=700 ns
		input <= transport std_logic_vector'("10000000"); --80
		-- --------------------
		WAIT FOR 1000 ns; -- Time=1700 ns
		-- --------------------

		write(TX_OUT, string'("Total[]"));
		writeline(results, TX_OUT);
		ASSERT (FALSE) REPORT
			"Success! Simulation for annotation completed"
			SEVERITY FAILURE;
	END PROCESS;
END testbench_arch;

CONFIGURATION splitter_cfg OF testbench IS
	FOR testbench_arch
	END FOR;
END splitter_cfg;
