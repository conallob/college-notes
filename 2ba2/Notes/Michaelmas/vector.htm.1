<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Eiffel Class</TITLE>
<META NAME="Template" CONTENT="C:\MSOFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!-- Generated by ISE Eiffel 3. --></P>
<PRE>
<I><STRONG>class
</I></STRONG><EM>&#9;VECTOR </EM>[<EM>G </EM>-&gt;<EM> COMPARABLE</EM>]

<I><STRONG>creation</I></STRONG><EM> 
&#9;make
</EM>
<I><STRONG>feature</I></STRONG><EM>  
</EM>
<EM>&#9;v</EM>:<EM> ARRAY </EM>[<EM>G</EM>];
<EM>&#9;&#9;&#9;
</EM><I><STRONG>feature</I></STRONG><EM>  
</EM>
<EM>&#9;size</EM>:<EM> INTEGER</EM>;

<EM>&#9;&#9;
&#9;&#9;&#9;
&#9;make </EM>(<EM>n</EM>:<EM> INTEGER</EM>)<EM> </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>require
</I></STRONG><EM>&#9;&#9;&#9;pre</EM>:<EM> n </EM>&gt;<EM> 0
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;size </EM>:=<EM> n</EM>;
<EM>&#9;&#9;&#9;</EM>!!<EM> v</EM><I><STRONG>.</I></STRONG><EM>make </EM>(<EM>1</EM>,<EM> n</EM>)
<EM>&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

<EM>&#9;
&#9;item </EM>(<EM>i</EM>:<EM> INTEGER</EM>):<EM> G </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>require
</I></STRONG><EM>&#9;&#9;&#9;pre</EM>:<EM> 1 </EM>&lt;=<EM> i </EM><I><STRONG>and</I></STRONG><EM> i </EM>&lt;=<EM> size
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;Result </EM>:=<EM> v</EM><I><STRONG>.</I></STRONG><EM>item </EM>(<EM>i</EM>)
<EM>&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

<EM>&#9;
&#9;put </EM>(<EM>x</EM>:<EM> G</EM>;<EM> i</EM>:<EM> INTEGER</EM>)<EM> </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>require
</I></STRONG><EM>&#9;&#9;&#9;pre</EM>:<EM> 1 </EM>&lt;=<EM> i </EM><I><STRONG>and</I></STRONG><EM> i </EM>&lt;=<EM> size
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;v</EM><I><STRONG>.</I></STRONG><EM>put </EM>(<EM>x</EM>,<EM> i</EM>)
<EM>&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

<EM>&#9;
&#9;arr_copy </EM>(<EM>a</EM>:<EM> ARRAY </EM>[<EM>G</EM>])<EM> </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;&#9;</EM>-- copy an array, a, into current vector
<EM>&#9;&#9;</EM><I><STRONG>require
</I></STRONG><EM>&#9;&#9;&#9;pre</EM>:<EM> a</EM><I><STRONG>.</I></STRONG><EM>count </EM>=<EM> size
&#9;&#9;</EM><I><STRONG>local
</I></STRONG><EM>&#9;&#9;&#9;i</EM>,<EM> j</EM>:<EM> INTEGER
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> a</EM><I><STRONG>.</I></STRONG><EM>lower</EM>;
<EM>&#9;&#9;&#9;&#9;j </EM>:=<EM> 1
&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>&gt;<EM> a</EM><I><STRONG>.</I></STRONG><EM>upper
&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;put </EM>(<EM>a</EM><I><STRONG>.</I></STRONG><EM>item </EM>(<EM>i</EM>),<EM> j</EM>);
<EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> i </EM>+<EM> 1</EM>;
<EM>&#9;&#9;&#9;&#9;j </EM>:=<EM> j </EM>+<EM> 1
&#9;&#9;&#9;</EM><I><STRONG>end
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

<EM>&#9;
&#9;min_index</EM>:<EM> INTEGER </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>local
</I></STRONG><EM>&#9;&#9;&#9;i</EM>,<EM> i_min</EM>:<EM> INTEGER</EM>;
<EM>&#9;&#9;&#9;min</EM>:<EM> G
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> 1</EM>;
<EM>&#9;&#9;&#9;&#9;i_min </EM>:=<EM> i</EM>;
<EM>&#9;&#9;&#9;&#9;min </EM>:=<EM> item </EM>(<EM>i_min</EM>)
<EM>&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>=<EM> size
&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> i </EM>+<EM> 1</EM>;
<EM>&#9;&#9;&#9;&#9;</EM><I><STRONG>if</I></STRONG><EM> item </EM>(<EM>i</EM>)<EM> </EM>&lt;<EM> min </EM><I><STRONG>then
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;min </EM>:=<EM> item </EM>(<EM>i</EM>);
<EM>&#9;&#9;&#9;&#9;&#9;i_min </EM>:=<EM> i
&#9;&#9;&#9;&#9;</EM><I><STRONG>end
</I></STRONG><EM>&#9;&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;&#9;&#9;Result </EM>:=<EM> i_min
&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

<EM>&#9;
&#9;max_index</EM>:<EM> INTEGER </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>local
</I></STRONG><EM>&#9;&#9;&#9;i</EM>,<EM> i_max</EM>:<EM> INTEGER</EM>;
<EM>&#9;&#9;&#9;max</EM>:<EM> G
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> 1</EM>;
<EM>&#9;&#9;&#9;&#9;i_max </EM>:=<EM> i</EM>;
<EM>&#9;&#9;&#9;&#9;max </EM>:=<EM> item </EM>(<EM>i_max</EM>)
<EM>&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>=<EM> size
&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> i </EM>+<EM> 1</EM>;
<EM>&#9;&#9;&#9;&#9;</EM><I><STRONG>if</I></STRONG><EM> item </EM>(<EM>i</EM>)<EM> </EM>&gt;<EM> max </EM><I><STRONG>then
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;max </EM>:=<EM> item </EM>(<EM>i</EM>);
<EM>&#9;&#9;&#9;&#9;&#9;i_max </EM>:=<EM> i
&#9;&#9;&#9;&#9;</EM><I><STRONG>end
</I></STRONG><EM>&#9;&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;&#9;&#9;Result </EM>:=<EM> i_max
&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;
</EM><I><STRONG>end</I></STRONG><EM> </EM>--<EM> </EM>class <EM>VECTOR</PRE></EM></BODY>
</HTML>
