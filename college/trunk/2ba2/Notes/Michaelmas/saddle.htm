<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<META NAME="Generator" CONTENT="Microsoft Word 97">
<TITLE>Eiffel Class</TITLE>
<META NAME="Template" CONTENT="C:\PROGRAM FILES\MICROSOFT OFFICE\OFFICE\html.dot">
</HEAD>
<BODY LINK="#0000ff" VLINK="#800080">

<P><!-- Generated by ISE Eiffel 3. --></P>
<PRE>
<I><STRONG>class
</I></STRONG><EM>&#9;SADDLE
</EM>
<I><STRONG>creation</I></STRONG><EM> 
&#9;make
</EM>
<I><STRONG>feature</I></STRONG><EM>  
</EM>
<EM>&#9;mat</EM>:<EM> </EM><A HREF="matrix.htm"><I>MATRIX</I></A><EM> </EM>[<EM>INTEGER</EM>];

<EM>&#9;&#9;&#9;
&#9;make </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;</EM><I><STRONG>local
</I></STRONG><EM>&#9;&#9;&#9;r</EM>,<EM> c</EM>:<EM> INTEGER
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;io</EM><I><STRONG>.</I></STRONG><EM>put_string </EM>("<EM>%N Enter filename: </EM>");
<EM>&#9;&#9;&#9;io</EM><I><STRONG>.</I></STRONG><EM>read_word</EM>;
<EM>&#9;&#9;&#9;file2matrix </EM>(<EM>io</EM><I><STRONG>.</I></STRONG><EM>last_string</EM>);
<EM>&#9;&#9;&#9;print_matrix </EM>(<EM>mat</EM>,<EM> mat</EM><I><STRONG>.</I></STRONG><EM>rows</EM>,<EM> mat</EM><I><STRONG>.</I></STRONG><EM>cols</EM>);
&#9;&#9;&#9;<I>io.put_string ("Looking for one Saddle Point .. %N");
&#9;&#9;&#9;one_saddle (mat);
&#9;&#9;&#9;io.put_new_line;
&#9;&#9;&#9;io.put_string ("Looking for All Saddle Points ....%N");
&#9;&#9;&#9;all_saddle (mat)
</I><EM>&#9;&#9;&#9;io</EM><I><STRONG>.</I></STRONG><EM>read_character
&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

&#9;<I>one_saddle (m: MATRIX [INTEGER]) is 
&#9;&#9;&#9;-- Max of Cols of M
&#9;&#9;local 
&#9;&#9;&#9;mni, mxi: INTEGER;
&#9;&#9;&#9;mnr, mxc: VECTOR [INTEGER];
&#9;&#9;&#9;tr: MATRIX [INTEGER]
&#9;&#9;do 
&#9;&#9;&#9;mnr := m.min_row;
&#9;&#9;&#9;tr := m.transpose;
&#9;&#9;&#9;mxc := tr.max_row;
&#9;&#9;&#9;mxi := mnr.max_index;
&#9;&#9;&#9;mni := mxc.min_index;
&#9;&#9;&#9;if  mnr.item (mxi) = mxc.item (mni) then 
&#9;&#9;&#9;&#9;print_saddle (m, mxi, mni)
&#9;&#9;&#9;end 
&#9;&#9;end ; -- one_saddle

 &#9;all_saddle (m: MATRIX [INTEGER]) is 
&#9;&#9;&#9;-- Max of Cols of M
&#9;&#9;local 
&#9;&#9;&#9;mnr, mxc: VECTOR [INTEGER];
&#9;&#9;&#9;tr: MATRIX [INTEGER];
&#9;&#9;&#9;i, j: INTEGER
&#9;&#9;do 
&#9;&#9;&#9;mnr := m.min_row;
&#9;&#9;&#9;tr := m.transpose;
&#9;&#9;&#9;mxc := tr.max_row;
&#9;&#9;&#9;from 
&#9;&#9;&#9;&#9;i := 1
&#9;&#9;&#9;until 
&#9;&#9;&#9;&#9;i &gt; m.rows
&#9;&#9;&#9;loop 
&#9;&#9;&#9;&#9;from 
&#9;&#9;&#9;&#9;&#9;j := 1
&#9;&#9;&#9;&#9;until 
&#9;&#9;&#9;&#9;&#9;j &gt; m.cols
&#9;&#9;&#9;&#9;loop 
&#9;&#9;&#9;&#9;&#9;if  mnr.item (i) = mxc.item (j) then 
&#9;&#9;&#9;&#9;&#9;&#9;print_saddle (m, i, j)
&#9;&#9;&#9;&#9;&#9;end ;
&#9;&#9;&#9;&#9;&#9;j := j + 1
&#9;&#9;&#9;&#9;end ;
&#9;&#9;&#9;&#9;i := i + 1
&#9;&#9;&#9;end 
&#9;&#9;end ; -- all_saddle

&#9;print_saddle (m: MATRIX [INTEGER]; i, j: INTEGER) is 
&#9;&#9;do 
&#9;&#9;&#9;io.put_integer (m.item (i, j));
&#9;&#9;&#9;io.put_string (" is a Saddle_Point at ");
&#9;&#9;&#9;io.put_integer (i);
&#9;&#9;&#9;io.put_character (' ');
&#9;&#9;&#9;io.put_integer (j);
&#9;&#9;&#9;io.put_new_line
&#9;&#9;end ;
</I>


<EM>&#9;
&#9;file2matrix </EM>(<EM>fname</EM>:<EM> STRING</EM>)<EM> </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;&#9;</EM>-- Input from file, fname, into the matrix, mat.
<EM>&#9;&#9;&#9;</EM>-- First 2 numbers give #rows and #cols
<EM>&#9;&#9;</EM><I><STRONG>local
</I></STRONG><EM>&#9;&#9;&#9;in_file</EM>:<EM> TEXT_FILE_READ</EM>;
<EM>&#9;&#9;&#9;i</EM>,<EM> j</EM>,<EM> r</EM>,<EM> c</EM>:<EM> INTEGER</EM>;
<EM>&#9;&#9;&#9;x</EM>:<EM> INTEGER
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;</EM>!!<EM> in_file</EM><I><STRONG>.</I></STRONG><EM>connect_to </EM>(<EM>fname</EM>);
<EM>&#9;&#9;&#9;in_file</EM><I><STRONG>.</I></STRONG><EM>read_integer</EM>;
<EM>&#9;&#9;&#9;r </EM>:=<EM> in_file</EM><I><STRONG>.</I></STRONG><EM>last_integer</EM>;
<EM>&#9;&#9;&#9;in_file</EM><I><STRONG>.</I></STRONG><EM>read_integer</EM>;
<EM>&#9;&#9;&#9;c </EM>:=<EM> in_file</EM><I><STRONG>.</I></STRONG><EM>last_integer</EM>;
<EM>&#9;&#9;&#9;</EM>!!<EM> mat</EM><I><STRONG>.</I></STRONG><EM>make </EM>(<EM>r</EM>,<EM> c</EM>);
<EM>&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> 1
&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>&gt;<EM> r
&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;j </EM>:=<EM> 1
&#9;&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;j </EM>&gt;<EM> c
&#9;&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;in_file</EM><I><STRONG>.</I></STRONG><EM>read_integer</EM>;
<EM>&#9;&#9;&#9;&#9;&#9;x </EM>:=<EM> in_file</EM><I><STRONG>.</I></STRONG><EM>last_integer</EM>;
<EM>&#9;&#9;&#9;&#9;&#9;mat</EM><I><STRONG>.</I></STRONG><EM>put </EM>(<EM>x</EM>,<EM> i</EM>,<EM> j</EM>);
<EM>&#9;&#9;&#9;&#9;&#9;j </EM>:=<EM> j </EM>+<EM> 1
&#9;&#9;&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> i </EM>+<EM> 1
&#9;&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;&#9;&#9;in_file</EM><I><STRONG>.</I></STRONG><EM>disconnect
&#9;&#9;</EM><I><STRONG>end</I></STRONG>;

<EM>&#9;
&#9;print_matrix </EM>(<EM>m</EM>:<EM> </EM><A HREF="matrix.htm"><I>MATRIX</I></A><EM> </EM>[<EM>INTEGER</EM>];<EM> r</EM>,<EM> c</EM>:<EM> INTEGER</EM>)<EM> </EM><I><STRONG>is
</I></STRONG><EM>&#9;&#9;&#9;</EM>-- M has r rows and c columns
<EM>&#9;&#9;&#9;</EM>-- i.e. M is of height r and width c
<EM>&#9;&#9;</EM><I><STRONG>local
</I></STRONG><EM>&#9;&#9;&#9;i</EM>,<EM> j</EM>:<EM> INTEGER
&#9;&#9;</EM><I><STRONG>do
</I></STRONG><EM>&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> 1
&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;i </EM>&gt;<EM> r
&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;</EM><I><STRONG>from
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;j </EM>:=<EM> 1
&#9;&#9;&#9;&#9;</EM><I><STRONG>until
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;j </EM>&gt;<EM> c
&#9;&#9;&#9;&#9;</EM><I><STRONG>loop
</I></STRONG><EM>&#9;&#9;&#9;&#9;&#9;io</EM><I><STRONG>.</I></STRONG><EM>put_integer </EM>(<EM>m</EM><I><STRONG>.</I></STRONG><EM>item </EM>(<EM>i</EM>,<EM> j</EM>));
<EM>&#9;&#9;&#9;&#9;&#9;io</EM><I><STRONG>.</I></STRONG><EM>put_character </EM>('<EM> </EM>');
<EM>&#9;&#9;&#9;&#9;&#9;j </EM>:=<EM> j </EM>+<EM> 1
&#9;&#9;&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;&#9;&#9;&#9;io</EM><I><STRONG>.put_</I></STRONG><EM>new_line</EM>;
<EM>&#9;&#9;&#9;&#9;i </EM>:=<EM> i </EM>+<EM> 1
&#9;&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;&#9;&#9;io</EM><I><STRONG>.put_</I></STRONG><EM>new_line
&#9;&#9;</EM><I><STRONG>end</I></STRONG>;
<EM>&#9;
</EM><I><STRONG>end</I></STRONG><EM> </EM>--<EM> </EM>class <EM>SADDLE</PRE></EM></BODY>
</HTML>
